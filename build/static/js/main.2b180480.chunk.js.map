{"version":3,"sources":["components/Youtube.js","components/ReactProgress.js","components/Header.js","config.js","utils.js","containers/YoutubeDownloader.js","containers/App.js","index.js"],"names":["opts","width","playerVars","autoplay","RenderYoutube","videoId","className","onReady","event","target","pauseVideo","ProgressComponent","percentage","size","percent","strokeWidth","strokeColor","Header","src","socket","openSocket","youtubeLink","nullifyLocalStorageData","localStorage","clear","YoutubeDownloader","useState","link","setLink","data","setData","error","setError","disabled","setdisabled","qualityLabel","quality","container","itag","setQuality","setSize","setPercentage","requesting","setRequesting","formats","setFormats","useEffect","test","axios","post","then","response","console","log","availableFormats","on","parseInt","downloaded","total","url","getItem","ql","setInitialDataIfProgress","disconnect","basicReset","value","id","onChange","e","placeholder","JSON","parse","document","getElementById","selectedOptions","key","length","sort","a","b","map","el","stringify","getFormats","data-error","data-success","type","onClick","preventDefault","payload","setItem","setLocalStorageData","message","catch","err","split","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.2b180480.chunk.js","sourcesContent":["import React from \"react\";\nimport YouTube from \"react-youtube\";\n\nconst opts = {\n  width: \"100%\",\n  playerVars: {\n    autoplay: 0,\n  },\n};\n\nfunction RenderYoutube({ videoId }) {\n  function _onReady(event) {\n    // access to player in all event handlers via event.target\n    event.target.pauseVideo();\n  }\n\n  return (\n    <div className=\"youtubeVideo\">\n      <YouTube videoId={videoId} opts={opts} onReady={_onReady} />\n    </div>\n  );\n}\n\nexport default RenderYoutube;\n","import React from \"react\";\nimport { Line } from \"rc-progress\";\n\nconst ProgressComponent = ({ percentage, size }) => {\n  return (\n    <>\n      <p className=\"size\">\n        <b>Progress</b>: {percentage}% of 100% | <b>File size</b>: {size} bytes\n      </p>\n      <Line percent={percentage} strokeWidth=\"1\" strokeColor=\"red\" />\n    </>\n  );\n};\n\nexport default ProgressComponent;\n","import React, { useEffect, useState } from \"react\";\n\nconst Header = () => (\n  <div className=\"wrapper center-align\">\n    <img className=\"logo\" src=\"./youtube.png\" />\n    <span className=\"\">YOUTUBE DOWNLOADER</span>\n  </div>\n);\n\nexport default Header;\n","import openSocket from \"socket.io-client\";\n\nexport const baseURL = \"http://localhost:5050/youtube-downloader\";\nexport const socket = openSocket(\"http://localhost:5050\");\nexport const youtubeLink = /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n","export const setLocalStorageData = ({ url, ql }) => {\n  localStorage.setItem(\"url\", url);\n  localStorage.setItem(\"ql\", ql);\n};\n\nexport const nullifyLocalStorageData = () => {\n  localStorage.clear();\n};\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport RenderYoutube from \"../components/Youtube\";\nimport ProgressComponent from \"../components/ReactProgress\";\nimport Header from \"../components/Header\";\nimport { youtubeLink, socket, baseURL } from \"../config\";\nimport { nullifyLocalStorageData, setLocalStorageData } from \"../utils\";\n\nconst YoutubeDownloader = () => {\n  const [link, setLink] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [disabled, setdisabled] = useState(false);\n  const [quality, setQuality] = useState({\n    qualityLabel: \"360p\",\n    quality: \"medium\",\n    container: \"mp4\",\n    itag: 18,\n  });\n  const [size, setSize] = useState(0);\n  const [percentage, setPercentage] = useState(0);\n  const [requesting, setRequesting] = useState(false);\n  const [formats, setFormats] = useState([]);\n\n  const setInitialDataIfProgress = () => {\n    const url = localStorage.getItem(\"url\");\n    const ql = localStorage.getItem(\"ql\");\n\n    if (!link && url && ql) {\n      setLink(url);\n      setQuality(ql);\n    }\n  };\n\n  useEffect(() => {\n    nullifyLocalStorageData();\n    setPercentage(0);\n    setData(null);\n    if (link && youtubeLink.test(link)) {\n      axios\n        .post(\"http://localhost:5050/available-formats\", { link })\n        .then((response) => {\n          console.log(response.data.availableFormats);\n          setFormats(response.data.availableFormats);\n        });\n    } else {\n      setFormats([]);\n    }\n  }, [link]);\n\n  socket.on(\"downloadStatus\", (data) => {\n    console.log(data);\n\n    setPercentage(parseInt((data.downloaded / data.total) * 100));\n    console.log((data.downloaded / data.total) * 100);\n    setSize(parseInt(data.total));\n    if (requesting) {\n      setRequesting(false);\n      setdisabled(true); //nowww\n    }\n\n    if (!size) {\n      setSize(data.total);\n      setInitialDataIfProgress();\n    }\n\n    if (data.percentage > percentage) {\n      setPercentage(data.percentage);\n    }\n\n    if (data.percentage > 100) {\n      setPercentage(null);\n      socket.disconnect();\n      setdisabled(true); //nowww\n    }\n  });\n\n  const basicReset = () => {\n    setdisabled(false);\n    setPercentage(0);\n    setData(null);\n    setError(null);\n    setSize(0);\n    setRequesting(false);\n  };\n\n  const inputHandle = (e) => {\n    setLink(e.target.value);\n    basicReset();\n  };\n\n  const handleSelectOption = (e) => {\n    setQuality(\n      JSON.parse(\n        document.getElementById(\"selectedQuality\").selectedOptions[0].value\n      )\n    );\n    basicReset();\n  };\n\n  const downloadVideo = (e) => {\n    e.preventDefault();\n    if (youtubeLink.test(link)) {\n      const payload = { link, quality };\n      basicReset();\n      setLocalStorageData({ url: link, ql: quality });\n      setRequesting(true);\n      setdisabled(true);\n      axios\n        .post(baseURL, payload)\n        .then(({ data }) => {\n          nullifyLocalStorageData();\n          setError(null);\n          if (data.error) {\n            console.log(\"data error\", data.error);\n            setError(data.error);\n            setRequesting(false);\n            setdisabled(false);\n            return;\n          }\n          setdisabled(false);\n          setPercentage(0);\n          setData(data.message);\n          setError(null);\n        })\n        .catch((err) => {\n          setError(\"network error connection\", err);\n          nullifyLocalStorageData();\n          setdisabled(false);\n          setRequesting(null);\n        });\n    } else {\n      setError(\"Enter Valid Youtube Url\");\n      setdisabled(false);\n      setRequesting(false);\n      nullifyLocalStorageData();\n    }\n  };\n\n  const getFormats = (formats) => {\n    console.log(formats);\n    return formats\n      .sort((a, b) => parseInt(a.qualityLabel) - parseInt(b.qualityLabel))\n      .map((el, key) => {\n        return (\n          <option key={key} value={JSON.stringify(el)}>\n            {el.qualityLabel}\n          </option>\n        );\n      });\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"row\">\n        <div className=\"col s12 m6\">\n          <form>\n            <div className=\"videolinkholder\">\n              <h4 className=\"url\">URL</h4>\n              <input\n                value={link}\n                disabled={disabled}\n                id=\"email\"\n                onChange={inputHandle}\n                placeholder=\"Enter Your URL\"\n              />\n\n              <label className=\"formatLabel\">Video Quality</label>\n              <select\n                onChange={handleSelectOption}\n                id=\"selectedQuality\"\n                className=\"input-field\"\n              >\n                <option key=\"\" value=\"auto\">\n                  Auto\n                </option>\n                {formats && formats.length > 0 ? (\n                  <>{getFormats(formats)}</>\n                ) : (\n                  <>\n                    <option disabled={true}>Loading</option>\n                  </>\n                )}\n              </select>\n            </div>\n            <span>\n              {error ? (\n                <span className=\"error\" data-error={error} data-success=\"right\">\n                  {error}\n                </span>\n              ) : null}\n              {data ? <div className=\"success\">{data}</div> : null}\n              {!percentage && requesting ? (\n                <div className=\"helper-text\">Requesting for download...</div>\n              ) : null}\n              {percentage ? (\n                <ProgressComponent percentage={percentage} size={size} />\n              ) : null}\n            </span>\n            <div className=\"downloadContainer\">\n              <button\n                className=\"btn downloadBtn\"\n                disabled={disabled}\n                type=\"submit\"\n                onClick={downloadVideo}\n              >\n                Download\n              </button>\n            </div>\n          </form>\n        </div>\n        <div className=\"col s12 m6\">\n          {\" \"}\n          {youtubeLink.test(link) ? (\n            <RenderYoutube videoId={link.split(\"v=\")[1]} />\n          ) : (\n            <div className=\"centerItem\">\n              {\" \"}\n              <div className=\"no-video-display\">No preview available</div>\n            </div>\n          )}{\" \"}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default YoutubeDownloader;\n","import React from \"react\";\nimport YoutubeDownloader from \"./YoutubeDownloader\";\nimport \"../style.css\";\n\nconst App = () => (\n  <div className=\"container\">\n    <YoutubeDownloader />\n  </div>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}